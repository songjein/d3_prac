<!DOCTYPE html>
<html>
  <head>
		<meta charset="utf-8">
    <title>d3 basic</title>
		<script src="/d3.v4.min.js"></script>
		<style>
		</style>
	</head>
  <body>
		<svg style="width:500px;height:500px;border:1px lightgray solid;">
		</svg>
		<script>
			/*
			d3.json('/tweets.json', function(data){
				dataViz(data.tweets);
			});

			function dataViz(incomingData){
				incomingData.forEach(function(el){
					el.impact = el.favorites.length + el.retweets.length;
					el.tweetTime = new Date(el.timestamp);
				});

				var maxImpact = d3.max(incomingData, function(el){return el.impact;});
				var startEnd = d3.extent(incomingData, function(el){return el.tweetTime;}); 

				var timeRamp = d3.scaleTime().domain(startEnd).range([20,480]);
				var yScale = d3.scaleLinear().domain([0, maxImpact]).range([0,460]);
				var radiusScale = d3.scaleLinear().domain([0, maxImpact]).range([1,20]);
				var colorScale = d3.scaleLinear().domain([0, maxImpact]).range(["#ABF200", "red"]);

				d3.select('svg').attr('style', 'height: 500px; width:600px;');
				d3.select('svg')
					.selectAll('circle')
					.data(incomingData)
					.enter()
					.append('circle')
					.attr('r', function(d){return radiusScale(d.impact);})
					.attr('cx', function(d,i){return timeRamp(d.tweetTime);})
					.attr('cy', function(d){return 480 - yScale(d.impact);})
					.style("fill", function(d){return colorScale(d.impact);})
					.style("stroke","black")
					.style("stroke-width","1px")
			}
			*/

			d3.json('/tweets.json', function(data){
				dataViz(data.tweets);
			});

			function dataViz(incomingData){
				incomingData.forEach(function(el){
					el.impact = el.favorites.length + el.retweets.length;
					el.tweetTime = new Date(el.timestamp);
				});

				var maxImpact = d3.max(incomingData, function(el){return el.impact;});
				var startEnd = d3.extent(incomingData, function(el){return el.tweetTime;}); 

				var timeRamp = d3.scaleTime().domain(startEnd).range([20,480]);
				var yScale = d3.scaleLinear().domain([0, maxImpact]).range([0,460]);
				var radiusScale = d3.scaleLinear().domain([0, maxImpact]).range([1,20]);
				var colorScale = d3.scaleLinear().domain([0, maxImpact]).range(["#ABF200", "red"]);

				var tweetG = d3.select('svg').selectAll('g')
					.data(incomingData)
					.enter()
					.append('g')
					.attr('transform', function(d){
						return 'translate(' + 
							timeRamp(d.tweetTime) + ',' + (480 - yScale(d.impact))
							+ ')';
					});
				
				// 참고:  append는 마지막으로 select된 대상에 대해서 이루어짐!
				tweetG.append('circle')
					.attr('r', function(d){return radiusScale(d.impact);})
					.style("fill", function(d){return colorScale(d.impact);})
					.style("stroke","black")
					.style("stroke-width","1px");

				// 참고:  append는 마지막으로 select된 대상에 대해서 이루어짐!
				tweetG.append('text')
					.text(function(d){return d.user + "-" + d.tweetTime.getHours();});
					//.style('text-anchor', 'middle');

				// 화면의 콘솔에 
				// d3.selectAll('g').data([1,2,3,4]).exit().remove();	// exit
				// d3.selectAll('g').select('text').text(function(d){return d;}); // update
				// 쳐보기
			}
		</script>
  </body>
</html>
