<!DOCTYPE html>
<html>
  <head>
		<meta charset="utf-8">
    <title>d3 basic</title>
		<script src="/d3.v4.min.js"></script>
		<style>
		</style>
	</head>
  <body>
		<svg style="width:500px;height:500px;border:1px lightgray solid;">
		</svg>
		<script>
			var yScale = d3.scaleLinear().domain([0,24500]).range([0,100]);
			d3.select('svg')
				.selectAll('rect')
				.data([14, 68, 24500, 430, 19, 1000, 5555])
				.enter()
				.append('rect')
				.attr('width', 10)
				.attr('height', function(d){return yScale(d);})
				.style('fill', 'blue')
				.style('stroke', 'red')
				.style('stroke-width', '1px')
				.style('opacity', .25)
				.style('x', function(d,i){return i*10})
				.style('y', function(d,i){return 100 - yScale(d);});
			/*
			d3.csv('/cities.csv', function(error, data){
				dataViz(data);			
			});

			function dataViz(incomingData){
				// 처음엔 빈 셀렉션, but s셀렉션이 cities.csv 데이터를 바인딩 하면 요소가 생성됨
				d3.select('body').selectAll('div.cities')
				// data를 셀렉션에 바인딩
				.data(incomingData)
				// 셀렉션 안에 있는 dom 요소보다 데이터가 더 많을 때 어떻게 대응할지( 아... 이때 쓰이는구나 )
				.enter()
				// 현재 셀렉션 안에 요소 생성
				.append('div')
				// 새로 생성된 요소의 클래스 설정
				.attr('class', 'cities')
				.html(function(d,i) {return d.label;});
			}

			d3.json('/tweets.json', function(data){
				console.log(data);	
			});
			*/
		</script>

  </body>
</html>
